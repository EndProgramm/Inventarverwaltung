#:kivy 2.0.0
#:import Widget kivy.uix.widget
#:import BoxLayout kivy.uix.boxlayout
#:import Clock kivy.clock.Clock

<AddInv>
    GridLayout:
        cols: 1
        size: root.width, root.height
        GridLayout:
            cols: 3
            padding: 10
            spacing: 10
            Button:
                id: "addConsum"
                text: "Verbrauch"
                on_release:
                    root.manager.current = "addConsum"
                    root.manager.transition.direction = "right"
            Button:
                id: "addUses"
                text: "Gebrauch"
                on_release:
                    root.manager.current = "addUses"
                    root.manager.transition.direction = "right"
            Button:
                id: "showAll"
                text: "Inventar"
                on_release:
                    root.manager.current = "showAll"
                    root.manager.transition.direction = "up"
        Label:
            size_hint: (2.0,2.0)

<AddConsum>
    GridLayout:
        cols: 1
        size: root.width, root.height
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text: "Bezeichnung:"
            TextInput:
                multiline: False
            Label:
                text: "Standort:"
            TextInput:
                multiline: False
            Label:
                text: "Bemerkung:"
            TextInput
            Label:
                text: "Menge:"
            TextInput:
                multiline: False
            Button:
                text: "<< zurück"
                on_release:
                    root.manager.current = "addInv"
                    root.manager.transition.direction = "left"
            Button:
                text: "Speichern"
                on_release:
                    root.saveInv()

<AddUses>
    GridLayout:
        cols: 1
        size: root.width, root.height
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text: "Bezeichnung"
            TextInput:
                multiline: False
            Label:
                text: "Standort:"
            TextInput:
                multiline: False
            Label:
                text: "Bemerkung:"
            TextInput
            Label:
                text: "Kategorie:"
            Spinner:
                text: "Kategorie"
                values: "Computer", "Mobiliar", "Drucker"
            Label:
                text: "Ausleihbar:"
            CheckBox
            Button:
                text: "<< zurück"
                on_release:
                    root.manager.current = "addInv"
                    root.manager.transition.direction = "left"
            Button:
                text: "Speichern"
                on_release:
                    root.saveInv()

<Einzelansicht>
    on_enter:
        self.entryFill()
        print("abc", root.texte)

    GridLayout:
        cols:1
        bg: (1,1,1,1)
        spacing: 10
        padding: 10
        GridLayout:
            cols: 2
            size: root.width, root.height
            spacing: 10
            GridLayout:
                cols: 2
                padding: 10
                spacing: 10
                Label:
                    text: "ID"
                    color: 1,0,0,1
                    canvas.before:
                        Color:
                            rgba: 0, 0, 0, 1
                        Rectangle:
                            pos: self.pos
                            size: self.size
                Label:
                    id: entry_id
                    color: 0,0,0,1
                    canvas.before:
                        Color:
                            rgba: 1, 1, 1, 1
                        Rectangle:
                            pos: self.pos
                            size: self.size
                Label:
                    text: "Name"
                TextInput:
                    id: entry_name
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
                Label:
                    text: "Raum"
                TextInput:
                    id: entry_raum
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
                Label:
                    text: "Ausgeliehen"
                TextInput:
                    id: entry_ausgeliehen
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
            GridLayout:
                cols: 2
                padding: 10
                spacing: 10
                Label:
                    text: "Art"
                TextInput:
                    id: entry_art
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
                Label:
                    text: "Typ"
                TextInput:
                    id: entry_typ
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
                Label:
                    text: "Anzahl"
                TextInput:
                    id: entry_anzahl
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
                Label:
                    text: "Status"
                TextInput:
                    id: entry_status
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
        Label:
            text: "Bemerkung"
            text_size:self.size
            halign:'left'
            valign:'middle'
            size_hint: (1.0,0.125)
            spacing: 10

        TextInput:
            id: entry_bemerkung
            multiline: True
            size_hint: (1.0,0.25)

        GridLayout:
            cols: 3
            size_hint: (1.0,0.25)
            Button:
                id: "showAll"
                text: "Zurück"
                on_release:
                    root.manager.current = "showAll"
                    root.manager.transition.direction = "up"

            Button:
                id: "showAll"
                text: "Defekt melden"
                on_release:
                    root.manager.current = None
                    root.manager.transition.direction = "up"

            Button:
                id: "showAll"
                text: "Speichern"
                on_release:
                    root.speichern()
                    root.manager.current = "showAll"
                    root.manager.transition.direction = "down"

<ShowAll>
    Table:
        id: 'table'
#        Label:
#            id: "showAllEntry"
#            text: root.inhalt
#            text_size: root.width, root.height

<Table>:
    id: 'main_win'

    BoxLayout:
        orientation: 'vertical'
        padding: (5, 5)
        spacing: 5
        BoxLayout:
            size_hint: 1, 0.05
            orientation: 'horizontal'
            spacing: 5
            TextInput:
                id: suchfeld

                size_hint: 0.3, 1
                size_hint_max_x: 300

                background_color: (1, 1, 1, 0.8)
                multiline: False
                text: 'Suche'
#                text_language: 'de'
#                suggestion_text: 'Jep'

                on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
                on_text_validate:
                    root.callback_suche(self.text)
            Button:
                size_hint: 0.1, 1
                size_hint_max_x: 50
                on_release:
                    root.callback_suche(suchfeld.text)
            Button:
                size_hint: 0.1, 1
                size_hint_max_x: 50
                text: "Filter"
                on_release:
                    root.filter()
        RecycleView:
            viewclass: 'CustomLabel'
            id: 'table_floor'
            data: root.table_data
            RecycleGridLayout:
                id: 'table_floor_layout'
                cols: root.columns
                default_size: (None,250)
                default_size_hint: (1,None)
                size_hint_y: None
                height: self.minimum_height
                spacing: 5

<Popups>
    typ_spinner: typ
    kategorie_spinner: kategorie
    raum_ent: raum
    zustand_spinner: zustand
    anzahl_von_ent: anzahl_von
    anzahl_bis_ent: anzahl_bis
    ausleihbar_spinner: ausleihbar

    GridLayout:
        cols: 1
        size: root.width, root.height
        pos: root.pos
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text:"Typ:"
            Spinner:
                id: typ
                text: "kein Filter"
                values: "kein Filter", "Gebrauch", "Verbrauch" #Wenn nicht ausgewählt wird, dann kein Filter
            Label:
                text: "Kategorie:"
            Spinner:
                id: kategorie
                text: "kein Filter"
                values: "kein Filter","Computer", "Mobiliar", "Drucker"
            Label:
                text: "Raum:"
            TextInput:
                id: raum
                multiline: False
            Label:
                text: "Zustand:"
            Spinner:
                id: zustand
                text: "kein Filter"
                values: "kein Filter", "funktionsfähig", "defekt"
            Label:
                text:"Anzahl:"
            BoxLayout:
                orientation: "horizontal"
                cols: 4
                Label:
                    text:"von"
                TextInput:
                    id: anzahl_von
                    multiline: False

                Label:
                    text:"bis"
                TextInput:
                    id: anzahl_bis
                    multiline: False
            Label:
                text: "Ausleihbarkeit:"
            Spinner:
                id: ausleihbar
                text: "kein Filter"
                values: "kein Filter", "ausleihbar", "ausgeliehen"

        Button:
            text: "zurück"
            size_hint: 1, 0.1
            on_release:
                root.popup_close()
        Button:
            text: "speichern"
            size_hint: 1, 0.1
            on_release:
                root.popup_close()
                root.speichern()
            multiline: False

<CustomLabel@Button>:
    bcolor: (1, 1, 1, 1)
    background_color: 1, .3, .4, .85
    bg: 1,1,1,1
    bg2: 0,0,0,0
    canvas.before:
        Color:
            rgba: root.bg
        Rectangle:
            size: self.size
            pos: self.pos
    canvas:
        Color:
            rgba: root.bg2
    id: "einzelansicht"

    on_release:
        print(self.text)
        print(self.size)
        print(self.x, self.y) # y Position einer Reihe, wichtig für Verbesserung später
        #print(self.parent.children)
        kat = ("ID", "Name", "Typ", "Kategorie", "Raum", "Ausgeliehen", "Status", "Anzahl", "Bemerkung")
        if self.text in kat: app.sorti(self.text)
        else: app.einzelinfo(self.text, self.x)