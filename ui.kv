#:kivy 2.0.0
#:import Widget kivy.uix.widget
#:import BoxLayout kivy.uix.boxlayout
#:import Clock kivy.clock.Clock
#:import Factory kivy.factory.Factory

#:set fg (0.465, 0.549, 0.629, 1)
#:set gray (0.533, 0.533, 0.533, 1)

<AddInv>
    GridLayout:
        cols: 1
        size: root.width, root.height
        GridLayout:
            cols: 3
            padding: 10
            spacing: 10
            Button:
                background_color: fg
                id: "addConsum"
                text: "Verbrauch"
                on_release:
                    root.manager.current = "addConsum"
                    root.manager.transition.direction = "right"
            Button:
                background_color: fg
                id: "addUses"
                text: "Gebrauch"
                on_release:
                    root.manager.current = "addUses"
                    root.manager.transition.direction = "right"
            Button:
                background_color: fg
                id: "showButton"
                text: "Inventar"
                on_release:
                    root.manager.current = "showAll"
                    root.manager.transition.direction = "up"
        Label:
            size_hint: (2.0,2.0)

<AddConsum>
    GridLayout:
        cols: 1
        size: root.width, root.height
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text: "Bezeichnung:"
            TextInput:
                multiline: False
            Label:
                text: "Standort:"
            TextInput:
                multiline: False
            Label:
                text: "Bemerkung:"
            TextInput
            Label:
                text: "Menge:"
            TextInput:
                multiline: False
            Button:
                background_color: fg
                text: "<< zurück"
                on_release:
                    root.manager.current = "addInv"
                    root.manager.transition.direction = "left"
            Button:
                background_color: fg
                text: "Speichern"
                on_release:
                    root.saveInv()

<AddUses>
    GridLayout:
        cols: 1
        size: root.width, root.height
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text: "Bezeichnung"
            TextInput:
                multiline: False
            Label:
                text: "Standort:"
            TextInput:
                multiline: False
            Label:
                text: "Bemerkung:"
            TextInput
            Label:
                text: "Kategorie:"
            Spinner:
                text: "Kategorie"
                values: "Computer", "Mobiliar", "Drucker"
            Label:
                text: "Ausleihbar:"
            CheckBox
            Button:
                background_color: fg
                text: "<< zurück"
                on_release:
                    root.manager.current = "addInv"
                    root.manager.transition.direction = "left"
            Button:
                background_color: fg
                text: "Speichern"
                on_release:
                    root.saveInv()

<Einzelansicht>
    entryId: mid
    entryName: name
    entryAnzahl:anzahl
    entryKategorie:kategorie
    entryAusgeliehen:ausgeliehen
    entryBemerkung:bemerkung
    entryRaum:raum
    entryTyp: typ
    entryZustand:zustand
    GridLayout:
        cols:1
        bg: (1,1,1,1)
        size:root.width, root.height
        pos:root.pos
        spacing: 10
        padding: 10
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            GridLayout:
                cols: 2
                padding: 10
                spacing: 10
                Label:
                    text: "ID"
                    color: 1,0,0,1
                    canvas.before:
                        Color:
                            rgba: 0, 0, 0, 0
                        Rectangle:
                            pos: self.pos
                            size: self.size
                Label:
                    id: mid
                    color: 0,0,0,1
                    canvas.before:
                        Color:
                            rgba: 1, 1, 1, 1
                        Rectangle:
                            pos: self.pos
                            size: self.size
                Label:
                    text: "Name"
                TextInput:
                    id: name
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
                Label:
                    text: "Raum"
                TextInput:
                    id: raum
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
                Label:
                    text: "Anzahl"
                TextInput:
                    id: anzahl
                    multiline: False
                    on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
            GridLayout:
                cols: 2
                padding: 10
                spacing: 10
                Label:
                    text: "Typ"
                Spinner:
                    id: typ
                    values: "Gg", "Vg"
                Label:
                    text: "Kategorie"
                Spinner:
                    id: kategorie
                    values: root.kategorie()
                Label:
                    text: "Ausgeliehen"
                Spinner:
                    id: ausgeliehen
                    values: "True", "False", "None"
                Label:
                    text: "Zustand"
                Spinner:
                    id: zustand
                    values: "funktionsfähig", "defekt", "In Reperatur"
        Label:
            text: "Bemerkung"
            text_size:self.size
            halign:'left'
            valign:'middle'
            size_hint: (1.0,0.125)
            spacing: 10

        TextInput:
            id: bemerkung
            multiline: True
            size_hint: (1.0,0.25)

        GridLayout:
            cols: 3
            size_hint: (1.0,0.25)
            Button:
                background_color: fg
                id: "showAll"
                text: "Zurück"
                on_release:
                    root.closeEinzelansicht()

            Button:
                background_color: fg
                id: "showAll"
                text: "Defekt melden"
                on_release:
                    root.defektmelden()

            Button:
                background_color: fg
                id: "showAll"
                text: "Speichern"
                on_release:
                    root.speichern()
                    root.closeEinzelansicht()

<ShowAll>
    id: showAll
    Table:

<Table>:
    id: tableFloor
    orientation: 'vertical'
    padding: (5, 5)
    spacing: 5
    BoxLayout:
        size_hint: 1, 0.05
        orientation: 'horizontal'
        spacing: 5
        TextInput:
            id: suchfeld
            size_hint: 0.3, 1
            size_hint_max_x: 300

            background_color: (1, 1, 1, 0.8)
            multiline: False
            text: 'Suche'

            on_focus: Clock.schedule_once(lambda dt: self.select_all()) if self.focus else None
            on_text_validate:
                root.callbackSuche(self.text)
        Button:
            id: suchknopf
            background_color: gray
            size_hint: 0.1, 1
            size_hint_max_x: 50
            on_release:
                root.callbackSuche(suchfeld.text)
            Image:
                center:  suchknopf.right - suchknopf.width + 24, suchknopf.top - suchknopf.height + 3
                size: suchknopf.width - 5, suchknopf.height - 5
                source: 'assets/suchicon.png'
        Button:
            background_color: fg
            size_hint: 0.1, 1
            size_hint_max_x: 50
            text: "Filter"
            on_release:
                root.filter()
        Button:
            background_color: fg
            size_hint: 0.1, 1
            size_hint_max_x: 100
            text: "GG hinzufügen"
            on_release:
                root.addGG()
        Button:
            background_color: fg
            size_hint: 0.1, 1
            size_hint_max_x: 100
            text: "VG hinzufügen"
            on_release:
                root.addVG()

    BoxLayout:
        RecycleView:
            viewclass: 'CustomLabel'
            data: root.tableData
            id: tableFloor
            RecycleGridLayout:
                id: tableFloorLayout
                cols: root.columns
                default_size: (None,250)
                default_size_hint: (1,None)
                size_hint_y: None
                height: self.minimum_height
                spacing: 5

<TableBox>:
    RecycleView:
        viewclass: 'CustomLabel'
        data: root.tableData
        id: tableFloor
        RecycleGridLayout:
            id: tableFloorLayout
            cols: root.columns
            default_size: (None,250)
            default_size_hint: (1,None)
            size_hint_y: None
            height: self.minimum_height
            spacing: 5

<Popups>
    typSpinner: typ
    kategorieSpinner: kategorie
    raumEnt: raum
    zustandSpinner: zustand
    anzahlVonEnt: anzahlVon
    anzahlBisEnt: anzahlBis
    ausleihbarSpinner: ausleihbar

    GridLayout:
        cols: 1
        size: root.width, root.height
        pos: root.pos
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text:"Typ:"
            Spinner:
                id: typ
                text: "kein Filter"
                values: "kein Filter", "Gebrauch", "Verbrauch" #Wenn nicht ausgewählt wird, dann kein Filter
            Label:
                text: "Kategorie:"
            Spinner:
                id: kategorie
                text: "kein Filter"
                values: root.kategorie()
            Label:
                text: "Raum:"
            TextInput:
                id: raum
                multiline: False
            Label:
                text: "Zustand:"
            Spinner:
                id: zustand
                text: "kein Filter"
                values: "kein Filter", "funktionsfähig", "defekt"
            Label:
                text:"Anzahl:"
            BoxLayout:
                orientation: "horizontal"
                cols: 4
                Label:
                    text:"von"
                TextInput:
                    id: anzahlVon
                    multiline: False

                Label:
                    text:"bis"
                TextInput:
                    id: anzahlBis
                    multiline: False
            Label:
                text: "Ausleihbarkeit:"
            Spinner:
                id: ausleihbar
                text: "kein Filter"
                values: "kein Filter", "ausleihbar", "ausgeliehen"

        Button:
            background_color: fg
            text: "zurück"
            size_hint: 1, 0.1
            on_release:
                root.popupClose()
        Button:
            background_color: fg
            text: "speichern"
            size_hint: 1, 0.1
            on_release:
                root.popupClose()
                root.refreshTable(root.speichern())
            multiline: False

<PopupAddGG>
    nameEnt: name
    kategorieEnt: kategorie
    raumEnt: raum
    ausleihbarCheckbox: ausleihbar
    zustandSpinner: zustand
    bemerkungEnt:bemerkung
    GridLayout:
        cols: 1
        size: root.width, root.height
        pos: root.pos
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text:"Name:"
            TextInput:
                id: name
                multiline: False
            Label:
                text: "Kategorie:"
            TextInput:
                id: kategorie
                multiline: False
            Label:
                text: "Raum:"
            TextInput:
                id: raum
                multiline: False
            Label:
                text: "ausleihbar:"
            CheckBox:
                id: ausleihbar
            Label:
                text: "Zustand:"
            Spinner:
                id: zustand
                text: "funktionsfähig"
                values: "funktionsfähig", "defekt"
            Label:
                text: "Bemerkungen:"
            TextInput:
                id: bemerkung
                multiline: True


        Button:
            background_color: fg
            text: "zurück"
            size_hint: 1, 0.1
            on_release:
                root.popupAddGGClose()
        Button:
            background_color: fg
            text: "speichern"
            size_hint: 1, 0.1
            on_release:
                root.popupAddGGClose()
                root.speichern()
            multiline: False

<PopupAddVG>
    nameEnt: name
    kategorieEnt: kategorie
    raumEnt: raum
    anzahlEnt: anzahl
    zustandSpinner: zustand
    bemerkungEnt:bemerkung
    GridLayout:
        cols: 1
        size: root.width, root.height
        pos: root.pos
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text:"Name:"
            TextInput:
                id: name
                multiline: False
            Label:
                text: "Kategorie:"
            TextInput:
                id: kategorie
                multiline: False
            Label:
                text: "Raum:"
            TextInput:
                id: raum
                multiline: False
            Label:
                text: "Zustand:"
            Spinner:
                id: zustand
                text: "funktionsfähig"
                values: "funktionsfähig", "defekt"
            Label:
                text: "Anzahl"
            TextInput:
                id: anzahl
                multiline: False
            Label:
                text: "Bemerkungen:"
            TextInput:
                id: bemerkung
                multiline: False


        Button:
            background_color: fg
            text: "zurück"
            size_hint: 1, 0.1
            on_release:
                root.popupAddVGClose()
        Button:
            background_color: fg
            text: "speichern"
            size_hint: 1, 0.1
            on_release:
                root.popupAddVGClose()
                root.speichern()
            multiline: False

<PopupAddGG>
    nameEnt: name
    kategorieEnt: kategorie
    raumEnt: raum
    ausleihbarCheckbox: ausleihbar
    zustandSpinner: zustand
    bemerkungEnt:bemerkung
    GridLayout:
        cols: 1
        size: root.width, root.height
        pos: root.pos
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text:"Name:"
            TextInput:
                id: name
                multiline: False
            Label:
                text: "Kategorie:"
            TextInput:
                id: kategorie
                multiline: False
            Label:
                text: "Raum:"
            TextInput:
                id: raum
                multiline: False
            Label:
                text: "ausleihbar:"
            CheckBox:
                id: ausleihbar
            Label:
                text: "Zustand:"
            Spinner:
                id: zustand
                text: "funktionsfähig"
                values: "funktionsfähig", "defekt"
            Label:
                text: "Bemerkungen:"
            TextInput:
                id: bemerkung
                multiline: True


        Button:
            background_color: fg
            text: "zurück"
            size_hint: 1, 0.1
            on_release:
                root.popupAddGGClose()
        Button:
            background_color: fg
            text: "speichern"
            size_hint: 1, 0.1
            on_release:
                root.popupAddGGClose()
                root.speichern()
            multiline: False

<PopupAddVG>
    nameEnt: name
    kategorieEnt: kategorie
    raumEnt: raum
    anzahlEnt: anzahl
    zustandSpinner: zustand
    bemerkungEnt:bemerkung
    GridLayout:
        cols: 1
        size: root.width, root.height
        pos: root.pos
        GridLayout:
            cols: 2
            padding: 10
            spacing: 10
            Label:
                text:"Name:"
            TextInput:
                id: name
                multiline: False
            Label:
                text: "Kategorie:"
            TextInput:
                id: kategorie
                multiline: False
            Label:
                text: "Raum:"
            TextInput:
                id: raum
                multiline: False
            Label:
                text: "Zustand:"
            Spinner:
                id: zustand
                text: "funktionsfähig"
                values: "funktionsfähig", "defekt"
            Label:
                text: "Anzahl"
            TextInput:
                id: anzahl
                multiline: False
            Label:
                text: "Bemerkungen:"
            TextInput:
                id: bemerkung
                multiline: False


        Button:
            background_color: fg
            text: "zurück"
            size_hint: 1, 0.1
            on_release:
                root.popupAddVGClose()
        Button:
            background_color: fg
            text: "speichern"
            size_hint: 1, 0.1
            on_release:
                root.popupAddVGClose()
                root.speichern()
            multiline: False

<CustomLabel@Button>:
    bcolor: (0.465, 0.549, 0.629, 1)
    background_color: fg
    bg: 0.465, 0.549, 0.629, 1
    bg2: 0.465, 0.549, 0.629, 1
    canvas.before:
        Color:
            rgba: root.bg
        Rectangle:
            size: self.size
            pos: self.pos
    canvas:
        Color:
            rgba: root.bg2
    id: "einzelansicht"

    on_release:
        lineID = self.parent.getViewIndexAt([0,self.y])
        kat = ("ID", "Name", "Typ", "Kategorie", "Raum", "Ausgeliehen", "Status", "Anzahl", "Bemerkung")
        if self.text in kat: app.sorti(self.text)
        else: root.parent.parent.parent.parent.einzelansicht(self.parent.parent.data[lineID].get("text"))